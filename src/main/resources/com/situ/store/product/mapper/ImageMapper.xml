<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.situ.store.product.mapper.ImageMapper">

	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.situ.store.product.model.ImageModel">
		<result column="id" property="id" />
		<result column="product_code" property="productCode" />
		<result column="url" property="url" />
		<result column="type" property="type" />
	</resultMap>

	<!-- table all fields   sql片段 -->
	<sql id="Base_Column_List">
		id, product_code, url, type
	</sql>

	
	<sql id="Example_Where_Clause">
		where 1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="productCode != null and productCode != ''">
				and product_code = #{productCode}
			</if>
			<if test="url != null and url != ''">
				and url = #{url}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
	</sql>
	
	<!-- 查询条件 -->
	<sql id="Select_Where_Clause">
		where 1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="productCode != null and productCode != ''">
				and product_code = #{productCode}
			</if>
			<if test="url != null and url != ''">
				and url = #{url}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
			
	</sql>

	<!-- 插入记录 -->
	<!--selectKey  会将 SELECT LAST_INSERT_ID()的结果放入到传入的model的主键里面，  
        keyProperty 对应的model中的主键的属性名，这里是 user 中的id，因为它跟数据库的主键对应  
        order AFTER 表示 SELECT LAST_INSERT_ID() 在insert执行之后执行,多用与自增主键，  
              BEFORE 表示 SELECT LAST_INSERT_ID() 在insert执行之前执行，这样的话就拿不到主键了，  
                    这种适合那种主键不是自增的类型  
        resultType 主键类型 -->  
<!-- 		<selectKey resultType="java.lang.Integer"  -->
<!-- 		order="AFTER" keyProperty="id"> -->
<!-- 			SELECT LAST_INSERT_ID() -->
<!-- 		</selectKey> -->
<!--添加-->
	<insert id="insert" parameterType="Object">
		insert into store.image(product_code, url, type)
		values(#{productCode}, #{url}, #{type})
	</insert>
	<!--根据商品编号删除-->
	<delete id="delete" parameterType="Object">
		delete from store.image where id = #{id}
	</delete>
	
	<!--根据条件删除-->
	<delete id="deleteModel" parameterType="Object">
		delete from store.image
		<include refid="Example_Where_Clause" />
	</delete>

	<!-- 根据商品id修改商品图片类型-->
	<update id="update" parameterType="Object">
		update store.image set
		type= #{type} 
		where id = #{id}
	</update>

	
	
	<!-- 根据条件查询商品分类列表 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from store.image
		<include refid="Select_Where_Clause" />
<!-- 		<if test="pager.orderCondition != null and pager.orderCondition != ''"> -->
<!-- 			${pager.orderCondition} -->
<!-- 		</if> -->
	</select>
	
	<!-- 根据商品id查询商品分类-->
	<select id="select" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from store.image where id=#{id}
	</select>
</mapper>   
