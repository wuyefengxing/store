<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.situ.store.product.mapper.ProductMapper">

	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.situ.store.product.model.ProductModel">
		<result column="id" property="id" />
		<result column="code" property="code" />
		<result column="name" property="name" />
		<result column="price" property="price" />
		<result column="des" property="describe" />
		<result column="number" property="number" />
		<result column="state" property="state" />
		<result column="category_code" property="categoryCode" />
	</resultMap>

	<!-- table all fields   sql片段 -->
	<sql id="Base_Column_List">
		 product.id, code, name, price, des, number, state, category_code
	</sql>
	<sql id="Select_Column_List">
		 product.id, code, name, price, des, number, state, category_code, url
	</sql>

	
	<sql id="Example_Where_Clause">
		where 1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="code != null and code != ''">
				and code = #{code}
			</if>
			<if test="name != null and name != ''">
				and name = #{name}
			</if>
			<if test="price != null and price != ''">
				and price = #{price}
			</if>
			<if test="describe != null and describe != ''">
				and des = #{describe}
			</if>
			<if test="number != null and number != ''">
				and number = #{number}
			</if>
			<if test="state != null and state != ''">
				and state = #{state}
			</if>
			<if test="categoryCode != null and categoryCode != ''">
				and category_code = #{categoryCode}
			</if>
	</sql>
	
	<!-- 查询条件 -->
	<sql id="Select_Where_Clause">
		where 1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="code != null and code != ''">
				and code like #{code}
			</if>
			<if test="name != null and name != ''">
				and name like #{name}
			</if>
			<if test="price != null and price != ''">
				and price = #{price}
			</if>
			<if test="describe != null and describe != ''">
				and des = #{describe}
			</if>
			<if test="number != null and number != ''">
				and number = #{number}
			</if>
			<if test="state != null and state != ''">
				and state = #{state}
			</if>
			<if test="categoryCode != null and categoryCode != ''">
				and category_code = #{categoryCode}
			</if>
	</sql>


<sql id="Update_Where_Clause">
<trim suffixOverrides=",">
			<if test="name != null and name != ''">
				 name = #{name},
			</if>
			<if test="price != null and price != ''">
				price = #{price},
			</if>
			<if test="describe != null and describe != ''">
				des = #{describe},
			</if>
			<if test="number != null and number != ''">
				number = #{number},
			</if>
			<if test="state != null and state != ''">
				state = #{state},
			</if>
			<if test="categoryCode != null and categoryCode != ''">
				category_code = #{categoryCode},
			</if>
			</trim>
	</sql>

	<!-- 插入记录 -->
	<!--selectKey  会将 SELECT LAST_INSERT_ID()的结果放入到传入的model的主键里面，  
        keyProperty 对应的model中的主键的属性名，这里是 user 中的id，因为它跟数据库的主键对应  
        order AFTER 表示 SELECT LAST_INSERT_ID() 在insert执行之后执行,多用与自增主键，  
              BEFORE 表示 SELECT LAST_INSERT_ID() 在insert执行之前执行，这样的话就拿不到主键了，  
                    这种适合那种主键不是自增的类型  
        resultType 主键类型 -->  
<!-- 		<selectKey resultType="java.lang.Integer"  -->
<!-- 		order="AFTER" keyProperty="id"> -->
<!-- 			SELECT LAST_INSERT_ID() -->
<!-- 		</selectKey> -->
	<insert id="insert" parameterType="Object">
		insert into store.product(code, name, price, des, number, state, category_code)
		values(#{code}, #{name}, #{price}, #{describe}, #{number}, #{state}, #{categoryCode})
	</insert>
	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from store.product where code = #{code}
	</delete>
	
	<delete id="deleteModel" parameterType="Object">
		delete from store.product
		<include refid="Example_Where_Clause" />
	</delete>

	<!-- 根据编号修改全部商品信息-->
	<update id="update" parameterType="Object">
		update store.product set
		name = #{name},
		price = #{price}
		des = #{describe}
		number = #{number}
		state = #{state}
		category_code = #{categoryCode}
		where code = #{code}
	</update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateActive" parameterType="Object">
		update store.product set 
		<include refid="Update_Where_Clause" />
		where code = #{code}
	</update>
	
	<!-- 查询系统商品列表 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Select_Column_List" />
		from store.product left join store.image on product.code=image.product_code and type="1"
		<include refid="Select_Where_Clause" />
		<if test="pageOn == true">
		  limit #{rowStart}, #{pageLimit}
			</if>
<!-- 		<if test="pager.orderCondition != null and pager.orderCondition != ''"> -->
<!-- 			${pager.orderCondition} -->
<!-- 		</if> -->
	</select>
	
	<!-- 根据编号查询商品-->
	<select id="select" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from store.product where code=#{code}
	</select>
	
	<!-- 列表总数 -->
	<select id="selectCount" resultType="java.lang.Integer"
	parameterType="Object">
		select count(1) from store.product
		<include refid="Select_Where_Clause" />
		<if test="pageOn == true">
		  limit #{rowStart}, #{pageLimit}
			</if>
	</select>
</mapper>   
